<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. --><!DOCTYPE appendix PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "docbookV4.5/docbookx.dtd" []>
<appendix>
  <appendixinfo>
    <title>Руководство программиста (Власюк А. ИПО-14А)</title>
    <abstract>
      <title>To Do List</title>
      <para>Проект To do List позволяет создавать, редактировать и удалять личные дела пользователя. При этом дела хранятся в массиве на стороне клиента. Поэтому нет необходимости использовать какие-либо серверные решения. </para>
      <para>Из-за этого проект можно использовать как в качестве обычного веб-приложения, так и расширения.</para>
    </abstract>
  </appendixinfo>
  <title>Сценарий №1</title>
  <abstract>
    <title>Сценарий №1 - Добавление элемента в список</title>
    <para>Пользователь вводит текст своего &quot;дела&quot; в поле ввода и нажимает кнопку &quot;Add&quot;.</para>
    <para>В качестве элементов списка выступает тег &lt;LI&gt;. При создании элемента списка из тега &lt;input&gt; берётся информация введённая пользователем. При этом отслеживается ввод пользователя и если он ничего не вводя нажал на кнопку добавления он будет оповёщен об ошибке &quot;Вы должны ввести что-то&quot;. Элемент добавляется в конец списка.</para>
  </abstract>
  <programlisting>function newElement() {

var li = document.createElement(&quot;li&quot;);

var inputValue = document.getElementById(&quot;myInput&quot;).value;

var t = document.createTextNode(inputValue);

li.appendChild(t);

if (inputValue === &apos;&apos;) {

alert(&quot;You must write something!&quot;);

} else {

document.getElementById(&quot;myUL&quot;).appendChild(li);

} document.getElementById(&quot;myInput&quot;).value = &quot;&quot;;

var span = document.createElement(&quot;SPAN&quot;);

var txt = document.createTextNode(&quot;\u00D7&quot;);

span.className = &quot;close&quot;;

span.appendChild(txt);

li.appendChild(span);

for (i = 0; i &lt; close.length; i++) {

close[i].onclick = function() {

var div = this.parentElement;

div.style.display = &quot;none&quot;;

}

}

}</programlisting>
  <abstract>
    <title>Сценарий 2 - Нажатие кнопки удаления</title>
    <para>Пользователь кликает на кнопке удаления &quot;Х&quot;, отслеживается запись на которой был произведен клик по кнопке и &quot;дело&quot; удаляется.</para>
    <para>Кнопка удаления (Х) добавляется к каждому элементу списка путём цикла. При этом при удалении происходит не удаление элемента, а фактически его скрытие.</para>
  </abstract>
  <programlisting>var close = document.getElementsByClassName(&quot;close&quot;);

var i; for (i = 0; i &lt; close.length; i++) {

close[i].onclick = function() {

var div = this.parentElement;

div.style.display = &quot;none&quot;;

}

}</programlisting>
  <abstract>
    <title>Сценарий 3 - Нажатие на элемент списка</title>
    <para>При нажатии на элемент списка происходит его вычеркивание т.е - отметка об успешном выполнении.</para>
    <para>При клике на элемент списка вызывается обработчик события проверяется на каком элементе произошел щелчек и если это LI, то при помощи функции classList.Toggle присоединяется заранее определенный CSS класс - checked. </para>
  </abstract>
  <programlisting>var list = document.querySelector(&apos;ul&apos;);

list.addEventListener(&apos;click&apos;, function(ev) {

if (ev.target.tagName === &apos;LI&apos;) {

ev.target.classList.toggle(&apos;checked&apos;);

}

}, false);</programlisting>
</appendix>
